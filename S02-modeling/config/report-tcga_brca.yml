# task
task: GraphLSurv
experiment_type: sim
random_state: 42

# output
# save_path: ./results/TCGA_BRCA/GraphLSurv
# save_path: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/GraphLSurv_result
# 实际的存放地址：/home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/GraphLSurv-result-seed_split_0
save_path: /home/jupyter-ljh/data/mydata/GraphLSurv-main/S02-modeling/result/ljh/
#改放在当前代码目录下
# spliting
seed_split: [0, 1, 2, 3, 4]
# seed_split: 0 #方便调试
# data_split: ./data_split/tcga_brca/tcga_brca-split{}.npz
# data_split: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/data_split/tcga_brca/tcga_brca-seed54-fold{}-ljh.npz #注意不要省略ljh
data_split: /home/jupyter-ljh/data/mydata/GraphLSurv-main/S02-modeling/data_split/tcga_brca_ljh/tcga_brca-seed54-fold{}-ljh.npz #注意不要省略ljh 
#改放在当前代码目录下

# data
dataset_name: tcga_brca
# dir_sld_feat: /data/TCGA_BRCA/feats-l1-s256-mrandom_be-n1000-color_norm/h5_files
dir_sld_feat: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/feats-l1-s256-mrandom_be-n1000-color_norm/h5_files #patch特征和下面的图都需要符合csv文件，csv文件需要patient_id，pathology_id，e，t
# dir_sld_feat: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/feats-l1-s256-mrandom_be-n1000-color_norm/h5_files_part #patch特征和下面的图都需要符合csv文件，csv文件需要patient_id，pathology_id，e，t
# k_knn_graph: 10 
k_knn_graph: 6 #对应graph building那一步的k
# dir_pat_graph: /data/TCGA_BRCA/feats-l1-s256-mrandom_be-n1000-color_norm/graph-knn-k{}-t0
# dir_pat_graph: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/feats-l1-s256-mrandom_be-n1000-color_norm/graph-knn-k{}-t0
dir_pat_graph: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/feats-l1-s256-mrandom_be-n1000-color_norm/graph-knn-k{}-t0-mysplit
# dir_pat_graph: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/feats-l1-s256-mrandom_be-n1000-color_norm/graph-knn-k{}-t0-part
# path_csv: /data/TCGA_BRCA/TCGA_BRCA_path_full.csv
# path_csv: /home/jupyter-ljh/data/mntdata/data0/LI_jihao/GraphLSurv-BRCA/data_split/tcga_brca/tcga_brca_path_full_ljh.csv
path_csv: /home/jupyter-ljh/data/mydata/GraphLSurv-main/S02-modeling/data_split/tcga_brca_ljh/tcga_brca_path_full_ljh.csv #改放在代码目录下
undirect_graph: True
split_stratify: False
save_prediction: True

# training
batch_size: 1
# num_workers: 8
num_workers: 0 #方便调试，不是线程数，是显卡数
optimizer_type: adam
lr: 0.0001
weight_decay: 0.0005
lr_factor: 0.8
lr_patience: 5
lr_min: 0.00001
# epochs: 300
# epochs: 150
epochs: 2 #方便调试
bp_every_iters: 16
patience: 10

# graph_learn_regularization
graph_reg: True
smoothness_ratio: 0.1 # respective to \alpha
degree_ratio: 0.00
sparsity_ratio: 0.00

# model
model_in_dim: 1024
model_hid_dim: 128
model_out_dim: 1
model_num_layers: 1 # respective to the number of GCN-HMP layers
model_dropout_ratio: 0.6

# loss
loss_type: sim-breslow
reg_l1: 0.00001

# anchor graph learner layer
agl_hid_dim: 128
agl_ratio_anchors: 0.1 # respective to the value of r/s
agl_epsilon: 0.9 # respective to \delta
agl_topk: null
agl_metric_type: transformer

# anchor graph encoder layer
age_graph_hops: 3 # respective to # standard GCN layers in one GCN-HMP layer, viewed as 2 x GCN + 1 x GCN-HMP if it is 3.
age_ratio_init_graph: 0.3 # respective to \lambda
age_dropout_ratio: 0.6
age_batch_norm: False

# device
no_cuda: False
cuda_id: 0
